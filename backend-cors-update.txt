
# Backend CORS Configuration Update for Deployment
# Replace the existing CORS configuration in app.py with this:

from flask import Flask, request, jsonify
from flask_cors import CORS
# ... other imports ...

app = Flask(__name__)
CORS(app, resources={
    r"/*": {
        "origins": ["https://securityviz.site", "http://localhost:8080"],
        "methods": ["GET", "POST", "OPTIONS"],
        "allow_headers": ["Content-Type", "X-Session-ID", "Accept", "Origin"],
        "supports_credentials": True
    }
})

# In the login route, update the response headers:
@app.route("/login", methods=["POST"])
def login():
    # ... existing code ...
    
    response = jsonify({
        "message": "Login successful",
        "username": user.get("username"),
        "session_id": session_id
    })
    
    # Set CORS headers with updated origins
    response.headers.add('Access-Control-Allow-Credentials', 'true')
    # Use condition to allow both development and production
    if request.headers.get('Origin') == 'http://localhost:8080':
        response.headers.add('Access-Control-Allow-Origin', 'http://localhost:8080')
    else:
        response.headers.add('Access-Control-Allow-Origin', 'https://securityviz.site')
    
    return response, 200
